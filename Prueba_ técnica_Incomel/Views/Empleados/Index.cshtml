
@{
    ViewData["Title"] = "Empleados";
}
<div class="content-fluid">
    <!-- DataTales Example -->
<div class="card mb-4 shadow">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight"><i class="fas fa-search"></i> Lista de Empleados</h6>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-sm-12">
                <button class="btn btn-success btn-sm" type="button" onclick="abrirModal(null)"><i class="fas fa-plus"></i> Crear Nuevo</button>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-sm-12">
                <div class="table-responsive">
                    <table class="table table-bordered" id="tabla" style="width:100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>DPI</th>
                                <th>Nombre</th>
                                <th>Hijos</th>
                                <th>Salario Base</th>
                                <th>Bono decreto</th>
                                <th>IGSS</th>
                                <th>Irtra</th>
                                <th>Bono de paternidad</th>
                                <th>Salario Total</th>
                                <th>Salario Liquido</th>
                                <th>Usuario Creacion</th>
                                <th>Fecha Registro</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>

    </div>
</div>

</div>

<!-- Modal -->
<div class="modal fade" id="FormModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
        <h5 class="modal-title" id="title-modal"></h5>
        </div> 
            <div class="modal-body" >
            <form class="row g-3" id="form">
                <input type="number" class="form-control" id="txtid" hidden>
                <div class="col-md-6">
                    <label for="validationCustom01" class="form-label">DPI</label>
                    <input type="text" class="form-control" id="txtdpi" required>
                </div>
                <div class="col-md-6">
                    <label for="validationCustom01" class="form-label">Nombre</label>
                    <input type="text" class="form-control" id="txtnombre" required>
                </div>
                <div class="col-md-6">
                    <label for="validationCustom01" class="form-label">Hijos</label>
                    <input type="number" class="form-control" id="txthijos" required>
                </div>
                <div class="col-md-6">
                    <label for="validationCustom01" class="form-label">Salario Base</label>
                    <input type="number" class="form-control" id="txtSalarioB" required>
                </div>
                <div class="col-md-12">
                    <label for="validationCustom01" class="form-label">Bono Decreto</label>
                    <input type="number" class="form-control" id="txtBonoD" required disabled>
                </div>
                <div class="col-md-6">
                    <label for="validationCustom01" class="form-label">IGSS</label>
                    <input type="number" class="form-control" id="txtIgss" required disabled>
                </div>
                <div class="col-md-6">
                    <label for="validationCustom01" class="form-label">IRTRA</label>
                    <input type="number" class="form-control" id="txtIrtra" required disabled>
                </div>
                <div class="col-md-6">
                    <label for="validationCustom01" class="form-label">Bono de Paternidad</label>
                    <input type="number" class="form-control" id="txtBonoP" required disabled>
                </div>
                <div class="col-md-6">
                    <label for="validationCustom01" class="form-label">Salario Total</label>
                    <input type="number" class="form-control" id="txtSalarioT" required disabled>
                </div>
                <div class="col-md-12">
                    <label for="validationCustom01" class="form-label">Salario Liquido</label>
                    <input type="number" class="form-control" id="txtSalarioL" required disabled>
                </div>
                </form>
            </div>
            <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            <button type="button" class="btn btn-primary" onclick="Guardar()" >Guardar</button>
            </div>      
    </div>
  </div>
</div>

@section Scripts{

    <script>

        var tabladata;

        $(document).ready(function () {

                tabladata = $('#tabla').DataTable({
                    "language": {
                        url: "https://cdn.datatables.net/plug-ins/1.11.5/i18n/es-ES.json"
                    },
                    responsive:true,
                    "ajax": {
                        "url": '@Url.Action("LstEmpleados", "Empleados")',
                        "type": "GET",
                        "datatype": "json"
                    },
                    "columns": [
                        { "data": "dpi" },
                        { "data": "nombrecompleto" },
                        { "data": "cantHijos" },
                        { "data": "salariobase" },
                        { "data": "bonodecreto" },
                        { "data": "igss" },
                        { "data": "irtra" },
                        { "data": "bonopaternidad" },
                        { "data": "salarioTotal" },
                        { "data": "salarioLiquido" },
                        { "data": "usuario", "render": function(data) { 
                            return data.nombre                        
                        }},
                        { "data": "fechacreacion"},
                        {
                            "data": "idempleado", "render": function (data, type, row, meta) {

                               var editarBtn = $("<button>").addClass("btn btn-primary btn-editar btn-sm").append(
                                  $("<i>").addClass("bi bi-pencil-square")
                                ).attr({ "data-informacion": JSON.stringify(row) });

                                // Botón de eliminar
                                var eliminarBtn = $("<button>").addClass("btn btn-danger btn-eliminar btn-sm ml-2").append(
                                  $("<i>").addClass("bi bi-trash3")
                                ).attr({ "data-informacion": JSON.stringify(row) });

                                // Devolver los botones como HTML
                             return editarBtn[0].outerHTML + eliminarBtn[0].outerHTML;
                            },
                            "orderable": false,
                            "searchable": false,
                            "width": "90px"
                        },                  
                    ],
                });
        });

        function calcularIgssIrtra() {
          // Obtener el campo de entrada del salario base
          const salarioBase = document.getElementById('txtSalarioB');
          const _hijos = document.getElementById('txthijos');
          const _bonodecreto = document.getElementById('txtBonoD');

          // Agregar un evento al campo de entrada del salario base
          salarioBase.addEventListener('input', function() {
            // Obtener el valor del salario base
            const salario = parseFloat(salarioBase.value);
            const hijos = parseFloat(_hijos.value);
            const bonodecreto = parseFloat(_bonodecreto.value);

            // Calcular el IGSS y actualizar el campo de texto correspondiente
            const igss = salario * 0.0483;
            document.getElementById('txtIgss').value = igss.toFixed(2);

            // Calcular el IRTRA y actualizar el campo de texto correspondiente
            const irtra = salario * 0.01;
            document.getElementById('txtIrtra').value = irtra.toFixed(2);

            const bonopaternidad = 133 * hijos;
            document.getElementById('txtBonoP').value = bonopaternidad.toFixed(2);

            const salariototal = salario + bonopaternidad + bonodecreto;
            document.getElementById('txtSalarioT').value = salariototal.toFixed(2);

            const salarioliquido = salariototal - igss - irtra;
            document.getElementById('txtSalarioL').value = salarioliquido.toFixed(2);
          });
        }

        // Llamar a la función para activar el cálculo del IGSS y el IRTRA
        calcularIgssIrtra();

        $(document).on('click', '.btn-editar', function (event) {
            var json = $(this).data("informacion")

            abrirModal(json)
        });

         function abrirModal(json) {
            $("#txtid").val(0);
            $("#txtdpi").val("");
            $("#txtnombre").val("");
            $("#txthijos").val("");
            $("#txtSalarioB").val("");
            $("#txtBonoD").val(250);
            $("#txtIgss").val("");
            $("#txtIrtra").val("");
            $("#txtBonoP").val("");
            $("#txtSalarioT").val("");
            $("#txtSalarioL").val("");
            $("#title-modal").text("Crear Empleado");

            if (json != null) {

                $("#txtid").val(json.idempleado);
                $("#txtdpi").val(json.dpi);
                $("#txtnombre").val(json.nombrecompleto);
                $("#txthijos").val(json.cantHijos);
                $("#txtSalarioB").val(json.salariobase);
                $("#txtBonoD").val(json.bonodecreto);
                $("#txtIgss").val(json.igss);
                $("#txtIrtra").val(json.irtra);
                $("#txtBonoP").val(json.bonopaternidad);
                $("#txtSalarioT").val(json.salarioTotal);
                $("#txtSalarioL").val(json.salarioLiquido);
                $("#title-modal").text("Editar Empleado");
            }

            $('#FormModal').modal('show');
        }

        //Guardar 
        function Guardar() {
            console.log(parseFloat($("#txtIgss").val()));
            var request = {
                idempleado: $("#txtid").val(),
                dpi: $("#txtdpi").val(),
                nombrecompleto: $("#txtnombre").val(),
                canthijos: $("#txthijos").val(),
                salariobase: parseFloat($("#txtSalarioB").val()),
                bonodecreto: parseFloat($("#txtBonoD").val()),
                igss: $("#txtIgss").val(),
                irtra: parseFloat($("#txtIrtra").val()),
                bonopaternidad: parseFloat($("#txtBonoP").val()),
                Salariototal: parseFloat($("#txtSalarioT").val()),
                salarioliquido: parseFloat($("#txtSalarioL").val()),
            };

            $.ajax({
                    url: "@Url.Action("Add", "Empleados")", // Url
                    method: "POST",
                    data: request,
                    success: function(data){
                        data = JSON.parse(data);
                        console.log(data);
                        if (data == true) {
                            tabladata.ajax.reload();
                            $('#FormModal').modal('hide');
                            Swal.fire({
                                icon: 'success',
                                title: 'Éxito',
                                text: 'La información se guardo correctamente',
                                showConfirmButton: false,
                                timer: 1500
                            });
                        }
                        else {
                            Swal.fire({
                              icon: 'error',
                              title: 'Advertencia',
                              text: 'Llena todos los campos correctamente',
                              showConfirmButton: false,
                              timer: 1500
                            })
                        }
                    }
                })
                // Se ejecuta si todo fue bien.
                .done(function (result) {
                    if (result != null) {
                    }
                    else {
                    }
                })
                // Se ejecuta si se produjo un error.
                .fail(function (xhr, status, error) {
                    Swal.fire({
                      icon: 'error',
                      title: 'Advertencia',
                      text: 'EL DPI: ' + request.dpi + " ya esta registrado",
                      showConfirmButton: false,
                      timer: 1500
                    })
                })
                // Hacer algo siempre, haya sido exitosa o no.
                .always(function () {

                });

        }

        //---------------------------------------DELETE
        $(document).on('click', '.btn-eliminar', function (event) {
            var json = $(this).data("informacion");

            Swal.fire({
            title: 'Está seguro?',
            text: "Desea eliminar el empleado " + json.nombrecompleto + "?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Si, borralo!'
            }).then((result) => {
                if (result.isConfirmed) {
                    Delete(json);
                }
            })
        });

        function Delete(json) {
           
            $.ajax({
                url: "@Url.Action("Eliminar", "Empleados")",
                type: "POST",
                data: json,
                success: function (data) {

                    if (result = true) {
                        tabladata.ajax.reload();
                        Swal.fire(
                          'Eliminado!',
                          'El empleado ' + json.nombrecompleto + ' ah sido eliminado',
                          'success'
                        )
                    } else {
                        alert("No se pudo eliminar")
                    }
                },
                error: function (error) {
                    console.log(error)
                },
                beforeSend: function () {

                },
            });
        }
    </script>
}

